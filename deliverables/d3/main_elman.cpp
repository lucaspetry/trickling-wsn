#include <iostream>
#include "elman_predictor.hpp"

#define HIDDEN_UNITS 10

using array = std::array<float, HIDDEN_UNITS>;

int main(int argc, char* argv[]) {
	array wInput = {-0.046808859245877965, 0.03861299854763378, -0.37130463750964904, -3.7685948678421575, -5.482371837081233, -5.169061825204793, -0.0981765451595916, 38.455148000015285, 0.14813322773104998, -0.24625641609021137};
	array biasInput = {588.2270447915304, -55514.14791513008, 1077.6984681162457, -49.87935123658205, -26658.634750358215, 3131.824531891035, 494.1698798187645, -15766.497351881475, -28835.48876287265, 1080.7277664213916};
	array wHiddenLayer = {-100.49376615084962, 310.5412945448763, 150.7703311448052, -283.4631794552904, 44.624188325957334, -461.8087253259369, -104.75030772623073, 581.4739282887996, 57.785730881542875, 153.70981416879079};
	float biasHidden = 469.75173680544657;

 	auto predictor = new ElmanPredictor<float, HIDDEN_UNITS>(wInput, biasInput, wHiddenLayer, biasHidden);
 	std::cout << "Valor: "<< predictor->predictNext(368) << std::endl;

  return 0;
}